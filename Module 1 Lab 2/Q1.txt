#include <iostream>
#include <unordered_set>

using namespace std;

bool isValidSudoku(char board[9][9]) {
    for (int i = 0; i < 9; i++) {
        unordered_set<char> rowSet;
        unordered_set<char> colSet;
        unordered_set<char> boxSet;

        for (int j = 0; j < 9; j++) {
            // Check rows
            if (board[i][j] != '.' && rowSet.find(board[i][j]) != rowSet.end()) {
                return false;
            }
            rowSet.insert(board[i][j]);

            // Check columns
            if (board[j][i] != '.' && colSet.find(board[j][i]) != colSet.end()) {
                return false;
            }
            colSet.insert(board[j][i]);

            // Check 3x3 boxes
            int boxRow = 3 * (i / 3);
            int boxCol = 3 * (i % 3);
            if (board[boxRow + j / 3][boxCol + j % 3] != '.' &&
                boxSet.find(board[boxRow + j / 3][boxCol + j % 3]) != boxSet.end()) {
                return false;
            }
            boxSet.insert(board[boxRow + j / 3][boxCol + j % 3]);
        }
    }

    return true;
}

int main() {
    char board[9][9];

    // Input Sudoku board
    int n;
    cin >> n;
    for (int i = 0; i < 9; i++) {
        for (int j = 0; j < 9; j++) {
            cin >> board[i][j];
        }
    }

    // Check validity and print the result
    if (isValidSudoku(board)) {
        cout << "YES" << endl;
    } else {
        cout << "NO" << endl;
    }

    return 0;
}
